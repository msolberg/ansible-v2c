---
- name: Set Deployment Name
  set_fact:
    deployment_name: "{{ item }}"

- name: Create the deployments dir
  file:
    path: "{{ work_dir }}/consolidated/{{ deployment_name }}/deployments"
    state: directory

- name: Find any deployed applications
  find:
    paths: "{{ work_dir }}/consolidated/{{ deployment_name }}/webapps"
    file_type: 'directory'
    recurse: no
  register: deployed_apps

- name: WAR up any deployed applications
  command: jar -cvf ../{{ item.path | basename }}.war .
  args:
    chdir: "{{ item.path }}"
    creates: "../{{ item.path | basename }}.war"
  with_items:
    - "{{ deployed_apps.files }}"

- name: Find all of the war files
  find:
    paths: "{{ work_dir }}/consolidated/{{ deployment_name }}/webapps"
    patterns: '*.war,*.WAR'
  register: war_files

- name: Copy the war files to the deployments dir
  copy:
    src: "{{ item.path }}"
    dest: "{{ work_dir }}/consolidated/{{ deployment_name }}/deployments/"
    remote_src: yes
  with_items:
    - "{{ war_files.files }}"

- name: Create the configuration dir
  file:
    path: "{{ work_dir }}/consolidated/{{ deployment_name }}/configuration"
    state: directory

- name: Find all of the configuration files
  find:
    paths: "{{ work_dir }}/consolidated/{{ deployment_name }}/conf"
    patterns: '*.xml,*.XML'
  register: config_files

- name: Copy the config files to the configuration dir
  copy:
    src: "{{ item.path }}"
    dest: "{{ work_dir }}/consolidated/{{ deployment_name }}/configuration/"
    remote_src: yes
  with_items:
    - "{{ config_files.files }}"

- name: Delete left over files in webapps
  file:
    path: "{{ work_dir }}/consolidated/{{ deployment_name }}/webapps"
    state: absent

- name: Find blacklisted files in lib
  find:
    paths: "{{ work_dir }}/consolidated/{{ deployment_name }}/lib"
    patterns: 'annotations-api.jar,catalina*.jar,ecj*.jar,el-api.jar,jaspic-api.jar,jasper*.jar,jsp-api.jar,servlet-api.jar,tomcat*.jar,websocket-api.jar'
  register: blacklisted_jars

- name: Delete blacklisted files in lib
  file:
    path: "{{ item.path }}"
    state: absent
  with_items:
    - "{{ blacklisted_jars.files }}"

- name: Delete left over files in conf
  file:
    path: "{{ work_dir }}/consolidated/{{ deployment_name }}/conf"
    state: absent
